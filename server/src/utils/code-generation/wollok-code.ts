// grammar elements here for being used in quickfixes, validators, and
// any code that generates wollok code
export const CONSTANTS =  {
  OPMULTIASSIGN: ['+=', '-=', '*=', '/=', '%=', '<<=', '>>='],
  OP_EQUALITY: ['==', '!=', '===', '!=='],
	ASIGNATION: '=',
  CLOSURE_BEGIN: '=>',
	OP_BOOLEAN_AND: ['and', "&&"],
	OP_BOOLEAN_OR: ["or", "||"],
	OP_BOOLEAN: ['and', "&&", "or", "||"],
	OP_UNARY_BOOLEAN: ['!', "not"],
  PARAM_SEPARATOR: ',',
  COLLECTION_SEPARATOR: ',',
  SEND_OPERATOR: '.',
  IF: 'if',
  ELSE: 'else',
  NEW: 'new',
	SELF: "self",
	SUPER: "super",
	NULL: "null",
	METHOD: "method",
	VAR: "var",
	PROPERTY: "property",
	CONST: "const",
	OVERRIDE: "override",
	NATIVE: "native",
	RETURN: "return",
	IMPORT: "import",
	SUITE: "describe",
	TEST: "test",
	MIXIN: "mixin",
	CLASS: "class",
	INHERITS: "inherits",
	DERIVED: "derived",
	MIXED_AND: "and",
	WKO: "object",
	FIXTURE: "fixture",
	PROGRAM: "program",
	PACKAGE: "package",

	ASSIGNMENT: "=",
	BEGIN_EXPRESSION: "{",
	END_EXPRESSION: "}",
	BEGIN_LIST_LITERAL: "[",
	END_LIST_LITERAL: "]",
	BEGIN_SET_LITERAL: "#{",
	END_SET_LITERAL: "}",
	BEGIN_PARAMETER_LIST: "(",
	END_PARAMETER_LIST: ")",
	INSTANTIATION: "new",
	TRY: "try",
  LIST_MODULE: "wollok.lang.List",
  SET_MODULE: "wollok.lang.Set",
  OBJECT_MODULE: "wollok.lang.Object",
} as const

// ToDo this array was copied from wollok-ts, use it
export const INFIX_OPERATORS = [
  ['||', 'or'],
  ['&&', 'and'],
  ['===', '==', '!==', '!='],
  ['>=', '>', '<=', '<'],
  ['?:', '>>>', '>>', '>..', '<>', '<=>', '<<<', '<<', '..<', '..', '->'],
  ['-', '+'],
  ['/', '*'],
  ['**', '%'],
].flat()
